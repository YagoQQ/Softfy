// <auto-generated />
using System;
using API.Softfy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Softfy.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525232520_V02")]
    partial class V02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Softfy.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("Modelos.Softfy.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("Modelos.Softfy.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("integer");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("integer");

                    b.Property<int>("DuracionSegundos")
                        .HasColumnType("integer");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PlanGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanGroupId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Modelos.Softfy.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Modelos.Softfy.HistorialReproduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CancionId")
                        .HasColumnType("integer");

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("CuentaId");

                    b.ToTable("HistorialesReproducciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenciaPasarela")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("PlanId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Modelos.Softfy.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxCuentas")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Modelos.Softfy.PlanGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminCuentaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanesGroupos");
                });

            modelBuilder.Entity("Modelos.Softfy.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Privada")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Modelos.Softfy.PlaylistCancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CancionId")
                        .HasColumnType("integer");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistsCanciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Suscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("PlanId");

                    b.ToTable("Suscripciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Album", b =>
                {
                    b.HasOne("Modelos.Softfy.Artista", "Artista")
                        .WithMany("Albumes")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("Modelos.Softfy.Cancion", b =>
                {
                    b.HasOne("Modelos.Softfy.Album", "Album")
                        .WithMany("Canciones")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Artista", "Artista")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Genero", "Genero")
                        .WithMany("Canciones")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Modelos.Softfy.Cuenta", b =>
                {
                    b.HasOne("Modelos.Softfy.PlanGroup", "PlanGroup")
                        .WithMany("Cuentas")
                        .HasForeignKey("PlanGroupId");

                    b.Navigation("PlanGroup");
                });

            modelBuilder.Entity("Modelos.Softfy.HistorialReproduccion", b =>
                {
                    b.HasOne("Modelos.Softfy.Cancion", "Cancion")
                        .WithMany("Reproducciones")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Cuenta", "Cuenta")
                        .WithMany("Historial")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Modelos.Softfy.Pago", b =>
                {
                    b.HasOne("Modelos.Softfy.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Modelos.Softfy.PlanGroup", b =>
                {
                    b.HasOne("Modelos.Softfy.Plan", "Plan")
                        .WithMany("Grupos")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Modelos.Softfy.Playlist", b =>
                {
                    b.HasOne("Modelos.Softfy.Cuenta", "Cuenta")
                        .WithMany("Playlists")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Modelos.Softfy.PlaylistCancion", b =>
                {
                    b.HasOne("Modelos.Softfy.Cancion", "Cancion")
                        .WithMany("EnPlaylists")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Playlist", "Playlist")
                        .WithMany("Canciones")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Modelos.Softfy.Suscripcion", b =>
                {
                    b.HasOne("Modelos.Softfy.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Softfy.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Modelos.Softfy.Album", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Artista", b =>
                {
                    b.Navigation("Albumes");

                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Cancion", b =>
                {
                    b.Navigation("EnPlaylists");

                    b.Navigation("Reproducciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Cuenta", b =>
                {
                    b.Navigation("Historial");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Modelos.Softfy.Genero", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("Modelos.Softfy.Plan", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("Modelos.Softfy.PlanGroup", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("Modelos.Softfy.Playlist", b =>
                {
                    b.Navigation("Canciones");
                });
#pragma warning restore 612, 618
        }
    }
}
